{"version":3,"file":"twitter.esm.js","sources":["../../src/providers/twitter.ts"],"sourcesContent":["import { OAuth2BaseProvider } from \"./oauth2.base\";\nconst defaultConfig = {\n    id: \"twitter\",\n};\nexport class TwitterAuthProvider extends OAuth2BaseProvider {\n    constructor(config) {\n        super({\n            ...defaultConfig,\n            ...config,\n        });\n    }\n    async getRequestToken(auth, host) {\n        const endpoint = \"https://api.twitter.com/oauth/request_token\";\n        const data = {\n            oauth_callback: encodeURIComponent(this.getCallbackUri(auth, host)),\n            oauth_consumer_key: this.config.apiKey,\n        };\n        const res = await fetch(`${endpoint}?${new URLSearchParams(data)}`, { method: \"POST\" });\n        const { oauth_token, oauth_token_secret, oauth_callback_confirmed } = await res.json();\n        return {\n            oauthToken: oauth_token,\n            oauthTokenSecret: oauth_token_secret,\n            oauthCallbackConfirmed: oauth_callback_confirmed,\n        };\n    }\n    async getAuthorizationUrl({ url }, auth, state, nonce) {\n        const endpoint = \"https://api.twitter.com/oauth/authorize\";\n        const { oauthToken } = await this.getRequestToken(auth, url.host);\n        const data = {\n            oauth_token: oauthToken,\n        };\n        const authUrl = `${endpoint}?${new URLSearchParams(data)}`;\n        return authUrl;\n    }\n    async getTokens(oauthToken, oauthVerifier) {\n        const endpoint = \"https://api.twitter.com/oauth/access_token\";\n        const data = {\n            oauth_consumer_key: this.config.apiKey,\n            oauth_token: oauthToken,\n            oauth_verifier: oauthVerifier,\n        };\n        const res = await fetch(`${endpoint}?${new URLSearchParams(data)}`, { method: \"POST\" });\n        return await res.json();\n    }\n    async getUserProfile({ oauth_token, oauth_token_secret: _ }) {\n        const endpoint = \"https://api.twitter.com/1.1/account/verify_credentials.json\";\n        const res = await fetch(endpoint, { headers: { Authorization: `Bearer ${oauth_token}` } });\n        return await res.json();\n    }\n    async callback({ url }, auth) {\n        const oauthToken = url.searchParams.get(\"oauth_token\");\n        const oauthVerifier = url.searchParams.get(\"oauth_verifier\");\n        const redirect = this.getStateValue(url.searchParams, \"redirect\");\n        const tokens = await this.getTokens(oauthToken, oauthVerifier);\n        let user = await this.getUserProfile(tokens);\n        if (this.config.profile) {\n            user = await this.config.profile(user, tokens);\n        }\n        return [user, redirect ?? this.getUri(auth, \"/\", url.host)];\n    }\n}\n"],"names":[],"mappings":";;;AACA,MAAM,gBAAgB;AAAA,EAClB,IAAI;AAAA;kCAEiC,mBAAmB;AAAA,EACxD,YAAY,QAAQ;AAChB,UAAM;AAAA,SACC;AAAA,SACA;AAAA;AAAA;AAAA,QAGL,gBAAgB,MAAM,MAAM;AAC9B,UAAM,WAAW;AACjB,UAAM,OAAO;AAAA,MACT,gBAAgB,mBAAmB,KAAK,eAAe,MAAM;AAAA,MAC7D,oBAAoB,KAAK,OAAO;AAAA;AAEpC,UAAM,MAAM,MAAM,MAAM,GAAG,YAAY,IAAI,gBAAgB,SAAS,EAAE,QAAQ;AAC9E,UAAM,EAAE,aAAa,oBAAoB,6BAA6B,MAAM,IAAI;AAChF,WAAO;AAAA,MACH,YAAY;AAAA,MACZ,kBAAkB;AAAA,MAClB,wBAAwB;AAAA;AAAA;AAAA,QAG1B,oBAAoB,EAAE,OAAO,MAAM,OAAO,OAAO;AACnD,UAAM,WAAW;AACjB,UAAM,EAAE,eAAe,MAAM,KAAK,gBAAgB,MAAM,IAAI;AAC5D,UAAM,OAAO;AAAA,MACT,aAAa;AAAA;AAEjB,UAAM,UAAU,GAAG,YAAY,IAAI,gBAAgB;AACnD,WAAO;AAAA;AAAA,QAEL,UAAU,YAAY,eAAe;AACvC,UAAM,WAAW;AACjB,UAAM,OAAO;AAAA,MACT,oBAAoB,KAAK,OAAO;AAAA,MAChC,aAAa;AAAA,MACb,gBAAgB;AAAA;AAEpB,UAAM,MAAM,MAAM,MAAM,GAAG,YAAY,IAAI,gBAAgB,SAAS,EAAE,QAAQ;AAC9E,WAAO,MAAM,IAAI;AAAA;AAAA,QAEf,eAAe,EAAE,aAAa,oBAAoB,KAAK;AACzD,UAAM,WAAW;AACjB,UAAM,MAAM,MAAM,MAAM,UAAU,EAAE,SAAS,EAAE,eAAe,UAAU;AACxE,WAAO,MAAM,IAAI;AAAA;AAAA,QAEf,SAAS,EAAE,OAAO,MAAM;AAC1B,UAAM,aAAa,IAAI,aAAa,IAAI;AACxC,UAAM,gBAAgB,IAAI,aAAa,IAAI;AAC3C,UAAM,WAAW,KAAK,cAAc,IAAI,cAAc;AACtD,UAAM,SAAS,MAAM,KAAK,UAAU,YAAY;AAChD,QAAI,OAAO,MAAM,KAAK,eAAe;AACrC,QAAI,KAAK,OAAO,SAAS;AACrB,aAAO,MAAM,KAAK,OAAO,QAAQ,MAAM;AAAA;AAE3C,WAAO,CAAC,MAAM,YAAY,KAAK,OAAO,MAAM,KAAK,IAAI;AAAA;AAAA;;;;"}